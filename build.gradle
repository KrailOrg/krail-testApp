/*
 * Copyright (c) 2014 David Sowerby
 *
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the License for the specific language governing permissions and limitations under the License.
 */
//build for Krail test application

apply from: 'http://plugins.jasoft.fi/vaadin-groovy.plugin?version=0.9.2'
apply plugin: 'eclipse'
apply plugin: 'project-report'
apply plugin: 'maven'

version = '0.7.3'

project.ext.vaadinVersion = '7.3.7'

ext.userHome = System.getProperty("user.home")
ext.tomcatHome = userHome + "/tomcat7_8080"

ext.warName = 'krail-testapp.war'

repositories {
    maven {
        url "file:///" + System.getProperty("user.home") + "/localRepo"
    }
    jcenter()
    mavenCentral()
}


uploadArchives {
    repositories {
        mavenDeployer {
            repository(url: "file://localhost/" + System.getProperty("user.home") + "/localRepo")
            pom {
                groupId = "uk.q3c.krail"
                project {
                    inceptionYear '2014'
                    licenses {
                        license {
                            name 'The Apache Software License, Version 2.0'
                            url 'http://www.apache.org/licenses/LICENSE-2.0.txt'
                            distribution 'repo'
                        }
                    }
                }
            }
        }
    }
}



war {
    exclude 'WEB-INF/lib/*'
    archiveName = warName
    destinationDir file(userHome + "/temp")
}

vaadin {
    widgetset "uk.q3c.krail.testapp.widgetset.testAppWidgetset"
    version vaadinVersion
    serverPort 8001
}

task stopTomcat(type: Exec) {

    //on linux
    commandLine userHome + '/stop7_8080.sh'

}

task startTomcat(type: Exec) {

    commandLine userHome + '/start7_8080.sh'

}


task deployToTomcat(type: Copy) {
    it.dependsOn("war")
    from war
    into "${tomcatHome}/webapps"
}



task waitForTomcat(dependsOn: startTomcat) {
    doFirst {
        println "giving Tomcat time to start"
        sleep(20 * 1000)
        println "sleep over"
    }
}


task cleanTomcat(type: Delete, dependsOn: stopTomcat) {
    delete tomcatHome + '/webapps/krail-testApp.war', tomcatHome + '/webapps/krail-testApp'
}



deployToTomcat.mustRunAfter(stopTomcat)
deployToTomcat.mustRunAfter(cleanTomcat)
test.mustRunAfter(waitForTomcat)


task cleantest(dependsOn: ['clean', 'cleanTomcat', 'deployToTomcat', 'waitForTomcat', 'test']) {

}




dependencies {

    //Krail
    compile 'uk.q3c.krail:krail:0.7.6'

    //test
    testCompile 'uk.q3c.krail:krail-bench:0.7.3'
    testCompile 'com.mycila:mycila-guice:2.10.ga'
    testCompile 'com.mycila.testing.plugins:mycila-testing-guice:2.8'
    testCompile 'com.mycila.testing.plugins:mycila-testing-mockito:2.8'
    testCompile 'org.mockito:mockito-all:1.9.0'
    testCompile 'junit:junit:4.11'
    testCompile 'org.assertj:assertj-core:1.5.0'
    testCompile 'org.assertj:assertj-joda-time:1.1.0'
    testCompile 'org.assertj:assertj-guava:1.0.0'

    //UI components
    compile 'de.steinwedel.vaadin.addon:messagebox:2.0.6'
    compile 'org.vaadin.addons:stepper:2.1.2'

    //vaadin push
    compile 'com.vaadin:vaadin-push:' + vaadinVersion

    //Testbench
    testCompile 'com.vaadin:vaadin-testbench:4.0.1'

    //JPA
    //Eclipse Link &  Java Persistence API
    compile 'org.eclipse.persistence:eclipselink:2.5.2'

    //guice extension
    compile 'org.apache.onami:org.apache.onami.persist:1.0.1'
    //JPA container
    compile 'com.vaadin.addon:jpacontainer:3.1.1'

    //HyperSQL DB
    compile 'org.hsqldb:hsqldb:2.3.2'

    //Derby Db
    compile 'org.apache.derby:derby:10.11.1.1'

}




